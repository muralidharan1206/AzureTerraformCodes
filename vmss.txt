//provider
terraform {
  required_providers {
    azurerm = {
      source = "hashicorp/azurerm"
      version = "~>2.0"
    }
  }
}
provider "azurerm" {
  features {}
}

### Resource Group
resource "azurerm_resource_group" "example" {
  name     = "RG"
  location = "East US"
}

### Network
resource "azurerm_virtual_network" "example" {
  name                = "vnet"
  resource_group_name = azurerm_resource_group.example.name
  location            = azurerm_resource_group.example.location
  address_space       = ["10.0.0.0/16"]
}

### Subnet
resource "azurerm_subnet" "example" {
  name                 = "subnet"
  resource_group_name  = azurerm_resource_group.example.name
  virtual_network_name = azurerm_virtual_network.example.name
  address_prefixes     = ["10.0.2.0/24"]
}

## network security group
resource "azurerm_network_security_group" "nsg" {
   name                = "nsg"
   location            = "azuerm_resource_group.example.location"
   resource_group_name = azurerm_resource_group.example.name
   
   security_rule {
       name                       = "GENERIC-RULE"
       priority                   = 1001
       direction                  = "Inbound"
       access                     = "Allow"
       protocol                   = "Tcp"
       source_port_range          = "*"
       destination_port_ranges     = ["22","3389","80","8080","443"]
       source_address_prefix      = "*"
       destination_address_prefix = "*"
   }
}

resource "azurerm_subnet_network_security_group_association" "asso_nsg_subnet" {
    subnet_id                 = azurerm_subnet.example.id
    network_security_group_id = azurerm_network_security_group.nsg.id
}


### Loadbalancer definition
resource "azurerm_lb" "example" {
 name                = "lb"
 location            = azurerm_resource_group.example.location
 resource_group_name = azurerm_resource_group.example.name

 frontend_ip_configuration {
   name                 = "ipconf-PublicIPAddress"
   public_ip_address_id = azurerm_public_ip.example.id
 }
}

### Define the backend pool
resource "azurerm_lb_backend_address_pool" "bp" {
 loadbalancer_id     = azurerm_lb.example.id
 name                = "BackEndAddressPool"
}

### Define the lb probes
resource "azurerm_lb_probe" "hp" {
 resource_group_name = azurerm_resource_group.example.name
 loadbalancer_id     = azurerm_lb.example.id
 name                = "probe"
 protocol			 = "tcp"
 request_path		 = "/"
 port                = 80
}

### Define the lb rule
resource "azurerm_lb_rule" "lbrule1" {
   resource_group_name            = azurerm_resource_group.example.name
   loadbalancer_id                = azurerm_lb.example.id
   name                           = "http"
   protocol                       = "Tcp"
   frontend_port                  = 80
   backend_port                   = 80
   backend_address_pool_id        = azurerm_lb_backend_address_pool.bp.id
   frontend_ip_configuration_name = "ipconf-PublicIPAddress"
   probe_id                       = azurerm_lb_probe.hp.id
}

### Define the lb rule
resource "azurerm_lb_rule" "lbrule2" {
   resource_group_name            = azurerm_resource_group.example.name
   loadbalancer_id                = azurerm_lb.example.id
   name                           = "ssh"
   protocol                       = "Tcp"
   frontend_port                  = 22
   backend_port                   = 22
   backend_address_pool_id        = azurerm_lb_backend_address_pool.bp.id
   frontend_ip_configuration_name = "ipconf-PublicIPAddress"
   probe_id                       = azurerm_lb_probe.hp.id
}

### The VM Scale Set (VMSS)
resource "azurerm_linux_virtual_machine_scale_set" "vmss" {
  depends_on = [azurerm_lb_rule.lbrule1,azurerm_lb_rule.lbrule2]
  name                = "vmss"
  resource_group_name = azurerm_resource_group.example.name
  location            = azurerm_resource_group.example.location
  sku                 = "Standard_DS2_v2"
  instances           = 2
  admin_username      = "adminuser"
  admin_password      = "Password1234!"
  disable_password_authentication = false

#### define the os image
 source_image_reference {
    publisher = "Canonical"
    offer     = "UbuntuServer"
    sku       = "16.04-LTS"
    version   = "latest"
  }

#### define the os disk
  os_disk {
    storage_account_type = "Standard_LRS"
    caching              = "ReadWrite"
  }

#### Define Network
  network_interface {
      name    = "nic"
      primary = true

    ip_configuration {
        name      = "ipconf-vmss"
        primary   = true
        subnet_id = azurerm_subnet.example.id
        load_balancer_backend_address_pool_ids = [azurerm_lb_backend_address_pool.bp.id]
    }
    network_security_group_id = azurerm_network_security_group.nsg.id

  }
}

### Add the Webserver to the VMSS
resource "azurerm_virtual_machine_scale_set_extension" "vmssextension" {
  name                         = "ext-vmss"
  virtual_machine_scale_set_id = azurerm_linux_virtual_machine_scale_set.vmss.id
  publisher                    = "Microsoft.Azure.Extensions"
  type                         = "CustomScript"
  type_handler_version         = "2.0"
  auto_upgrade_minor_version   = true
  force_update_tag             = true
  
  settings = jsonencode({
      "commandToExecute" : "apt-get -y update && apt-get install -y apache2" 
    })
}

### Public ip
resource "azurerm_public_ip" "example" {
  name                = "demoPubIp"
  location            = azurerm_resource_group.example.location
  resource_group_name = azurerm_resource_group.example.name
  allocation_method   = "Static"
}